package com.mkpits.cfs;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.regex.Matcher;
import java.util.regex.Pattern;

public class UseMath {
	
 static BufferedReader reader;
 String name, mobile,email, age , gender;
 int accountNum;
 double  balance;
 
	public static void main(String[] args) throws NumberFormatException, IOException {
		// TODO Auto-generated method stub
		
		UseMath obj = new UseMath();
		
		reader = new BufferedReader(new InputStreamReader(System.in));
		
		char ch='y';
		
		while( ch=='Y'|| ch=='y')
		{
			System.out.println("Enter your choice\n 1.Create Account \n 2.Deposit "
					+ "\n 3.Withdraw \n 4.Check Balance \n 5.Account Details");
			
					int choice = Integer.parseInt(reader.readLine());
			
		switch (choice) {
			case 1:
				obj.createAccount();
				break;
			
            case 2:
				 obj.deposit();
				break;
				
            case 3:
            	System.out.println("Withdrow");
//            	double w=Double.parseDouble(reader.readLine());
                     obj.withdraw(10000);
				//System.out.println(obj.balance);
				break;
			
           case 4:
	            obj.checkBalance();
	           break;

           case 5:
	           obj.accountDetails();
	         break;
	         
	         default:
	        	 System.out.println("Invalid Choice");
	        	 break;

			
			}
			
		}
	

	}

	private void accountDetails() {
		// TODO Auto-generated method stub
		System.out.println("The Account holder name is:"+name);
		System.out.println("The Account holder age is:"+age);
		System.out.println("The Account holder gender is:"+gender);
		System.out.println("The Account holder mobile is:"+mobile);
		System.out.println("The Account holder email is:"+email);
		System.out.println("balance "+balance);
		
	}

	private void checkBalance() {
		// TODO Auto-generated method stub
		
	}

	private void withdraw(double a) throws NumberFormatException, IOException {
		// TODO Auto-generated method stub
		System.out.println("Enter the amount to be withdrawed:");
		double b1 = Double.parseDouble(reader.readLine());
		double amount = a -b1;
		
		//balance-=a;
		System.out.println("The amount remaining after  withdrawed:"+amount);
	}

	private void deposit() throws NumberFormatException, IOException {
		// TODO Auto-generated method stub
		System.out.println("Enter the amount to be deposit:");
		balance = Double.parseDouble(reader.readLine());
		System.out.println("Your Amount is successfully deposited:" +balance);
		
	}

	private void createAccount() throws IOException {
		// TODO Auto-generated method stub
		System.out.println("Enter Account Holder Name");
		name = reader.readLine();	
		
		System.out.println("Enter Mobile");
		mobile = reader.readLine();	
		
		System.out.println("Enter Email");
		email = reader.readLine();	

		//Regular Expression   
        String regex = "^(.+)@(.+)$";  
        //Compile regular expression to get the pattern  
        Pattern pattern = Pattern.compile(regex);    
        //Create instance of matcher   
        Matcher matcher = pattern.matcher(email);  
        if (!matcher.matches()) {
				System.out.println("Email Not Valid");
		System.out.println("Enter Gender");
		gender = reader.readLine();	
		
		System.out.println("Enter Age");
		age = reader.readLine();	
		
		accountNum =(int) Math.floor(Math.random()*10000);
		System.out.println("Your account is created :"+accountNum);
		
	}

}
}